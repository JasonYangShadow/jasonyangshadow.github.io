<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fakechroot on Xu YANG&#39;s Personal Website</title>
    <link>https://jasonyangshadow.win/tags/fakechroot/</link>
    <description>Recent content in fakechroot on Xu YANG&#39;s Personal Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Tue, 02 Apr 2019 11:32:33 +0000</lastBuildDate>
    
	<atom:link href="https://jasonyangshadow.win/tags/fakechroot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>compiling LPMX&#39;s dependencies on centos 5.5</title>
      <link>https://jasonyangshadow.win/posts/compiling-lpmxs-dependencies-on-centos-5-5/</link>
      <pubDate>Tue, 02 Apr 2019 11:32:33 +0000</pubDate>
      
      <guid>https://jasonyangshadow.win/posts/compiling-lpmxs-dependencies-on-centos-5-5/</guid>
      <description>LPMX is a pure composable rootless container system. It runs purely in rootless mode and is designed for running under restricted environments such as grid infrastructure and batch system, where end-users could not get root privileges. LPMX itself is developed using golang and could be easily compiled and deployed acroos different platforms. However, its dependencis including fakechroot, fakeroot and memcached related stuff have to be recompiled. Here I use centos 5.</description>
    </item>
    
    <item>
      <title>fake union file system</title>
      <link>https://jasonyangshadow.win/posts/fake-union-file-system/</link>
      <pubDate>Thu, 20 Sep 2018 14:16:54 +0000</pubDate>
      
      <guid>https://jasonyangshadow.win/posts/fake-union-file-system/</guid>
      <description>Recently, I keep working on developing a fake unionfs for our rootless container. As we employ fakechroot to intercept system calls triggered by programs, I added code for unionfs support. The basic rules for our fake unionfs: 1. Complete rootless, unlike current implementations such as FUSE, we don&amp;rsquo;t need to install any hooks or kernel models in order to bridge kernel with userspace, all features provided are implemented by system calls interception.</description>
    </item>
    
  </channel>
</rss>