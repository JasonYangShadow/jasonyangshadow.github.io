<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>alogrithms on Xu YANG&#39;s Personal Website</title>
    <link>https://jasonyangshadow.github.io/tags/alogrithms/</link>
    <description>Recent content in alogrithms on Xu YANG&#39;s Personal Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 05 Mar 2020 17:28:08 +0900</lastBuildDate>
    
	<atom:link href="https://jasonyangshadow.github.io/tags/alogrithms/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Find All Duplicates in an Array</title>
      <link>https://jasonyangshadow.github.io/posts/find-all-duplicates-in-an-array/</link>
      <pubDate>Thu, 05 Mar 2020 17:28:08 +0900</pubDate>
      
      <guid>https://jasonyangshadow.github.io/posts/find-all-duplicates-in-an-array/</guid>
      <description>Given an array of integers, 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.
Find all the elements that appear twice in this array.
Could you do it without extra space and in O(n) runtime?
Example:
Input: [4,3,2,7,8,2,3,1] Output: [2,3] Using index as the indication of seen item.
class Solution: def findDuplicates(self, nums: List[int]) -&amp;gt; List[int]: ret = [] for num in nums: if nums[abs(num) - 1] &amp;lt; 0: ret.</description>
    </item>
    
  </channel>
</rss>